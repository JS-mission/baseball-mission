name: Random Reviewers 등록

on:
  pull_request:
    types:
      - opened
    branches:
      - jay-so
      - iey704
      - yerimming
      - makeUgreat
      - jiminseong

jobs:
  random-reviwer:
    runs-on: ubuntu-latest
    steps:
      - id: random_reviwer
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} 
          script: |
            const candidates = ['jay-so', 'iey704', 'yerimming', 'makeUgreat', 'jiminseong'];
            const { github, context } = require('@actions/github'); // context를 포함하여 가져오기

            const author = context.payload.pull_request.user.login;

            // 작성자를 제외한 후보자 목록 만들기
            const filteredCandidates = candidates.filter(candidate => candidate !== author);

            // 랜덤 리뷰어 선택
            const randomReviewer = filteredCandidates[Math.floor(Math.random() * filteredCandidates.length)];
            const comment = `@${randomReviewer} 님 랜덤 리뷰어로 당첨되셨습니다! 리뷰를 부탁드립니다. 🙏`;
            console.log(`Comment: ${comment}`);
            return { comment, reviewer: randomReviewer };

      - name: comment PR
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { github, context } = require('@actions/github'); // context 포함
            const reviewer = '${{ steps.random_reviwer.outputs.reviewer }}';
            const comment = `@${reviewer} 님 랜덤 리뷰어로 당첨되셨습니다! 리뷰를 부탁드립니다. 🙏`;
            
            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: comment
            });

      - name: Add Pull Request Reviewer
        uses: madrapps/add-reviewers@v1
        with:
          reviewers: ${{ steps.random_reviwer.outputs.reviewer }}
          token: ${{ secrets.GITHUB_TOKEN }}
